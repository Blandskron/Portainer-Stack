version: '3.8'

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    environment:
      - TZ=America/Santiago
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - digitus_lan
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer.rule=Host(`172.16.22.36`)'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'

  db_digitus:
    image: postgres:13
    container_name: db_digitus
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: D1g1tus_.2024
      POSTGRES_DB: db_digitus
    ports:
      - '50000:5432'
    volumes:
      - db_digitus_data:/var/lib/postgresql/data
    networks:
      - digitus_lan

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@digitus.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      TZ: America/Santiago
    ports:
      - '50003:80'
    depends_on:
      - db_digitus
    networks:
      - digitus_lan
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pgadmin.rule=Host(`172.16.22.36`)'
      - 'traefik.http.services.pgadmin.loadbalancer.server.port=80'

  service_user:
    image: blandskron/service-user:v1.0
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.service_user.rule=Host(`172.16.22.36`)'
      - 'traefik.http.services.service_user.loadbalancer.server.port=8081'
    ports:
      - '50001:8081'
    depends_on:
      - db_digitus
    volumes:
      - 'digitus_service_user:/var/run'
    environment:
      TZ: 'America/Santiago'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://db_digitus:5432/db_digitus'
      SPRING_DATASOURCE_USERNAME: 'postgres'
      SPRING_DATASOURCE_PASSWORD: 'D1g1tus_.2024'
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: 'org.postgresql.Driver'
    logging:
      driver: 'json-file'
      options:
        max-size: '50M'
        max-file: '3'
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 2G
    networks:
      - digitus_lan

  service_auth:
    image: blandskron/service-auth:v1.2
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.service_auth.rule=Host(`172.16.22.36`)'
      - 'traefik.http.services.service_auth.loadbalancer.server.port=8082'
    ports:
      - '50002:8082'
    depends_on:
      - db_digitus
    volumes:
      - 'digitus_service_auth:/var/run'
    environment:
      TZ: 'America/Santiago'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://db_digitus:5432/db_digitus'
      SPRING_DATASOURCE_USERNAME: 'postgres'
      SPRING_DATASOURCE_PASSWORD: 'D1g1tus_.2024'
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: 'org.postgresql.Driver'
      APP_BASE_URL_USER_SERVICE: 'http://172.16.22.36:50001/'
      APP_BASE_URL_PUBLISH_SERVICE: 'http://service_logevent:8080'
    logging:
      driver: 'json-file'
      options:
        max-size: '50M'
        max-file: '3'
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 2G
    networks:
      - digitus_lan

  traefik:
    image: traefik:v2.5
    container_name: traefik
    restart: always
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8080:8080'
    networks:
      - digitus_lan
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  digitus_lan:
    driver: bridge

volumes:
  portainer_data:
  db_digitus_data:
  digitus_service_user:
  digitus_service_auth:
